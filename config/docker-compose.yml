services:
  # PostgreSQL 数据库
  postgres:
    image: postgres:15-alpine
    container_name: videocall_postgres
    environment:
      POSTGRES_DB: videocall
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: videocall123
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ../core/database/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - videocall_network

  # Redis 缓存
  redis:
    image: redis:7-alpine
    container_name: videocall_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - videocall_network

  # Golang 后端服务
  backend:
    build:
      context: ../core/backend
      dockerfile: Dockerfile
    container_name: videocall_backend
    ports:
      - "8000:8000"
    environment:
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_NAME=videocall
      - DB_USER=admin
      - DB_PASSWORD=videocall123
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - JWT_SECRET=your-secret-key-here
    depends_on:
      - postgres
      - redis
    volumes:
      - ../core/backend:/app
    networks:
      - videocall_network

  # Python AI服务
  ai-service:
    build:
      context: ../core/ai-service
      dockerfile: Dockerfile
    container_name: videocall_ai_service
    ports:
      - "5000:5000"
    environment:
      - MODEL_PATH=/app/models
      - REDIS_HOST=redis
      - REDIS_PORT=6379
    depends_on:
      - redis
    volumes:
      - ../core/ai-service:/app
      - ai_models:/app/models
    networks:
      - videocall_network

  # Nginx 反向代理
  nginx:
    image: nginx:alpine
    container_name: videocall_nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ../config/docker/nginx/nginx.conf:/etc/nginx/nginx.conf
      - ../config/docker/nginx/ssl:/etc/nginx/ssl
    depends_on:
      - backend
      - ai-service
    networks:
      - videocall_network

volumes:
  postgres_data:
  redis_data:
  ai_models:

networks:
  videocall_network:
    driver: bridge 