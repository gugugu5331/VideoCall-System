version: '3.8'

services:
  # 数据库服务
  postgres:
    image: postgres:15
    container_name: postgres_db
    environment:
      POSTGRES_DB: video_conference
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: password123
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/deploy/sql:/docker-entrypoint-initdb.d
    networks:
      - backend

  mongodb:
    image: mongo:6
    container_name: mongodb
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password123
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
    networks:
      - backend

  redis:
    image: redis:7-alpine
    container_name: redis_cache
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - backend

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    environment:
      RABBITMQ_DEFAULT_USER: admin
      RABBITMQ_DEFAULT_PASS: password123
    ports:
      - "5672:5672"
      - "15672:15672"
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    networks:
      - backend

  # 服务发现
  consul:
    image: consul:latest
    container_name: consul
    ports:
      - "8500:8500"
    command: agent -server -bootstrap-expect=1 -ui -client=0.0.0.0
    networks:
      - backend

  # API网关
  gateway:
    build:
      context: ./backend/services/gateway
      dockerfile: Dockerfile
    container_name: gateway_service
    ports:
      - "8080:8080"
    environment:
      - CONSUL_URL=consul:8500
      - REDIS_URL=redis:6379
    depends_on:
      - consul
      - redis
    networks:
      - backend
      - frontend

  # 用户服务
  user-service:
    build:
      context: ./backend/services/user
      dockerfile: Dockerfile
    container_name: user_service
    environment:
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_NAME=video_conference
      - DB_USER=admin
      - DB_PASSWORD=password123
      - REDIS_URL=redis:6379
      - CONSUL_URL=consul:8500
    depends_on:
      - postgres
      - redis
      - consul
    networks:
      - backend

  # 会议服务
  meeting-service:
    build:
      context: ./backend/services/meeting
      dockerfile: Dockerfile
    container_name: meeting_service
    environment:
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_NAME=video_conference
      - DB_USER=admin
      - DB_PASSWORD=password123
      - REDIS_URL=redis:6379
      - CONSUL_URL=consul:8500
    depends_on:
      - postgres
      - redis
      - consul
    networks:
      - backend

  # 信令服务
  signaling-service:
    build:
      context: ./backend/services/signaling
      dockerfile: Dockerfile
    container_name: signaling_service
    environment:
      - REDIS_URL=redis:6379
      - CONSUL_URL=consul:8500
    depends_on:
      - redis
      - consul
    networks:
      - backend

  # 媒体服务
  media-service:
    build:
      context: ./backend/services/media
      dockerfile: Dockerfile
    container_name: media_service
    environment:
      - CONSUL_URL=consul:8500
      - RABBITMQ_URL=amqp://admin:password123@rabbitmq:5672/
    depends_on:
      - consul
      - rabbitmq
    networks:
      - backend

  # 检测服务
  detection-service:
    build:
      context: ./backend/services/detection
      dockerfile: Dockerfile
    container_name: detection_service
    environment:
      - MONGODB_URL=mongodb://admin:password123@mongodb:27017
      - CONSUL_URL=consul:8500
      - RABBITMQ_URL=amqp://admin:password123@rabbitmq:5672/
      - AI_SERVICE_URL=ai-detection:8501
    depends_on:
      - mongodb
      - consul
      - rabbitmq
      - ai-detection
    networks:
      - backend

  # 记录服务
  record-service:
    build:
      context: ./backend/services/record
      dockerfile: Dockerfile
    container_name: record_service
    environment:
      - MONGODB_URL=mongodb://admin:password123@mongodb:27017
      - CONSUL_URL=consul:8500
    depends_on:
      - mongodb
      - consul
    networks:
      - backend

  # 通知服务
  notification-service:
    build:
      context: ./backend/services/notification
      dockerfile: Dockerfile
    container_name: notification_service
    environment:
      - RABBITMQ_URL=amqp://admin:password123@rabbitmq:5672/
      - CONSUL_URL=consul:8500
    depends_on:
      - rabbitmq
      - consul
    networks:
      - backend

  # AI检测服务
  ai-detection:
    build:
      context: ./ai-detection
      dockerfile: Dockerfile
    container_name: ai_detection
    ports:
      - "8501:8501"
    volumes:
      - ./ai-detection/models:/models
    networks:
      - backend

  # Nginx负载均衡器
  nginx:
    image: nginx:alpine
    container_name: nginx_lb
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./backend/deploy/nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./backend/deploy/nginx/ssl:/etc/nginx/ssl
    depends_on:
      - gateway
    networks:
      - frontend

volumes:
  postgres_data:
  mongodb_data:
  redis_data:
  rabbitmq_data:

networks:
  backend:
    driver: bridge
  frontend:
    driver: bridge
