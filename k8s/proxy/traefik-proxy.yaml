# Traefik反向代理配置
apiVersion: v1
kind: ServiceAccount
metadata:
  name: traefik-ingress-controller
  namespace: video-conference
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: traefik-ingress-controller
rules:
  - apiGroups: [""]
    resources: ["services", "endpoints", "secrets"]
    verbs: ["get", "list", "watch"]
  - apiGroups: ["extensions", "networking.k8s.io"]
    resources: ["ingresses", "ingressclasses"]
    verbs: ["get", "list", "watch"]
  - apiGroups: ["extensions", "networking.k8s.io"]
    resources: ["ingresses/status"]
    verbs: ["update"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: traefik-ingress-controller
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: traefik-ingress-controller
subjects:
  - kind: ServiceAccount
    name: traefik-ingress-controller
    namespace: video-conference
---
# Traefik配置
apiVersion: v1
kind: ConfigMap
metadata:
  name: traefik-config
  namespace: video-conference
data:
  traefik.yml: |
    # 全局配置
    global:
      checkNewVersion: false
      sendAnonymousUsage: false
    
    # 入口点配置
    entryPoints:
      web:
        address: ":80"
        http:
          redirections:
            entrypoint:
              to: websecure
              scheme: https
      websecure:
        address: ":443"
        http:
          tls:
            options: default
    
    # 提供者配置
    providers:
      kubernetes:
        endpoints:
          - "https://kubernetes.default.svc:443"
        token: "/var/run/secrets/kubernetes.io/serviceaccount/token"
        certAuthFilePath: "/var/run/secrets/kubernetes.io/serviceaccount/ca.crt"
        namespaces:
          - "video-conference"
    
    # API和仪表板
    api:
      dashboard: true
      insecure: false
    
    # 证书解析器
    certificatesResolvers:
      letsencrypt:
        acme:
          email: admin@your-domain.com
          storage: /data/acme.json
          httpChallenge:
            entryPoint: web
    
    # 日志配置
    log:
      level: INFO
      filePath: "/var/log/traefik/traefik.log"
    
    accessLog:
      filePath: "/var/log/traefik/access.log"
      format: json
    
    # 指标配置
    metrics:
      prometheus:
        addEntryPointsLabels: true
        addServicesLabels: true
    
    # 追踪配置
    tracing:
      jaeger:
        samplingServerURL: http://jaeger:14268/api/sampling
        localAgentHostPort: jaeger:6831
---
# Traefik部署
apiVersion: apps/v1
kind: Deployment
metadata:
  name: traefik
  namespace: video-conference
  labels:
    app: traefik
spec:
  replicas: 2
  selector:
    matchLabels:
      app: traefik
  template:
    metadata:
      labels:
        app: traefik
    spec:
      serviceAccountName: traefik-ingress-controller
      containers:
      - name: traefik
        image: traefik:v2.10
        args:
          - --configfile=/etc/traefik/traefik.yml
        ports:
        - name: web
          containerPort: 80
        - name: websecure
          containerPort: 443
        - name: admin
          containerPort: 8080
        volumeMounts:
        - name: config
          mountPath: /etc/traefik
        - name: data
          mountPath: /data
        - name: logs
          mountPath: /var/log/traefik
        resources:
          requests:
            memory: "256Mi"
            cpu: "200m"
          limits:
            memory: "512Mi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /ping
            port: 8080
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /ping
            port: 8080
          initialDelaySeconds: 5
          periodSeconds: 5
      volumes:
      - name: config
        configMap:
          name: traefik-config
      - name: data
        emptyDir: {}
      - name: logs
        emptyDir: {}
---
# Traefik服务
apiVersion: v1
kind: Service
metadata:
  name: traefik
  namespace: video-conference
  labels:
    app: traefik
spec:
  type: LoadBalancer
  ports:
  - name: web
    port: 80
    targetPort: 80
    protocol: TCP
  - name: websecure
    port: 443
    targetPort: 443
    protocol: TCP
  selector:
    app: traefik
---
# Traefik仪表板服务
apiVersion: v1
kind: Service
metadata:
  name: traefik-dashboard
  namespace: video-conference
  labels:
    app: traefik
spec:
  type: ClusterIP
  ports:
  - name: admin
    port: 8080
    targetPort: 8080
    protocol: TCP
  selector:
    app: traefik
---
# Traefik Ingress路由
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: video-conference-traefik
  namespace: video-conference
  annotations:
    traefik.ingress.kubernetes.io/router.entrypoints: websecure
    traefik.ingress.kubernetes.io/router.tls.certresolver: letsencrypt
    traefik.ingress.kubernetes.io/router.middlewares: video-conference-auth@kubernetescrd
spec:
  tls:
  - hosts:
    - your-domain.com
    - api.your-domain.com
    - admin.your-domain.com
    secretName: video-conference-tls
  rules:
  # 主域名
  - host: your-domain.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: web-client-service
            port:
              number: 80
  # API域名
  - host: api.your-domain.com
    http:
      paths:
      - path: /api
        pathType: Prefix
        backend:
          service:
            name: gateway-service
            port:
              number: 8080
      - path: /ws
        pathType: Prefix
        backend:
          service:
            name: signaling-service
            port:
              number: 8083
  # 管理域名
  - host: admin.your-domain.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: traefik-dashboard
            port:
              number: 8080
---
# Traefik中间件 - 认证
apiVersion: traefik.containo.us/v1alpha1
kind: Middleware
metadata:
  name: auth
  namespace: video-conference
spec:
  basicAuth:
    secret: traefik-auth
---
# Traefik中间件 - 限流
apiVersion: traefik.containo.us/v1alpha1
kind: Middleware
metadata:
  name: rate-limit
  namespace: video-conference
spec:
  rateLimit:
    burst: 100
    average: 50
---
# Traefik中间件 - CORS
apiVersion: traefik.containo.us/v1alpha1
kind: Middleware
metadata:
  name: cors
  namespace: video-conference
spec:
  headers:
    accessControlAllowMethods:
      - GET
      - POST
      - PUT
      - DELETE
      - OPTIONS
    accessControlAllowOriginList:
      - https://your-domain.com
      - https://www.your-domain.com
    accessControlAllowHeaders:
      - "*"
    accessControlAllowCredentials: true
    accessControlMaxAge: 100
    addVaryHeader: true
