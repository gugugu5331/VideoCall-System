# LoadBalancer服务配置 - 用于公网访问
apiVersion: v1
kind: Service
metadata:
  name: video-conference-lb
  namespace: video-conference
  labels:
    app: video-conference-loadbalancer
  annotations:
    # AWS ELB配置
    service.beta.kubernetes.io/aws-load-balancer-type: "nlb"
    service.beta.kubernetes.io/aws-load-balancer-cross-zone-load-balancing-enabled: "true"
    service.beta.kubernetes.io/aws-load-balancer-backend-protocol: "tcp"
    # Azure配置
    service.beta.kubernetes.io/azure-load-balancer-internal: "false"
    # GCP配置
    cloud.google.com/load-balancer-type: "External"
spec:
  type: LoadBalancer
  ports:
    # HTTP端口
    - name: http
      port: 80
      targetPort: 80
      protocol: TCP
    # HTTPS端口
    - name: https
      port: 443
      targetPort: 443
      protocol: TCP
    # WebSocket信令端口
    - name: websocket
      port: 8083
      targetPort: 8083
      protocol: TCP
  selector:
    app: nginx-ingress-controller
  sessionAffinity: ClientIP
  sessionAffinityConfig:
    clientIP:
      timeoutSeconds: 10800
---
# 专用的API网关LoadBalancer
apiVersion: v1
kind: Service
metadata:
  name: api-gateway-lb
  namespace: video-conference
  labels:
    app: api-gateway-loadbalancer
  annotations:
    service.beta.kubernetes.io/aws-load-balancer-type: "nlb"
    service.beta.kubernetes.io/aws-load-balancer-cross-zone-load-balancing-enabled: "true"
spec:
  type: LoadBalancer
  ports:
    - name: api
      port: 8080
      targetPort: 8080
      protocol: TCP
  selector:
    app: gateway-service
  sessionAffinity: ClientIP
---
# 管理界面LoadBalancer
apiVersion: v1
kind: Service
metadata:
  name: admin-lb
  namespace: video-conference
  labels:
    app: admin-loadbalancer
  annotations:
    service.beta.kubernetes.io/aws-load-balancer-internal: "true"  # 内网访问
spec:
  type: LoadBalancer
  ports:
    - name: rabbitmq-mgmt
      port: 15672
      targetPort: 15672
      protocol: TCP
  selector:
    app: rabbitmq
  sessionAffinity: ClientIP
