user nginx;
worker_processes auto;
error_log /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;

events {
    worker_connections 1024;
    use epoll;
    multi_accept on;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # 日志格式
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for" '
                    'rt=$request_time uct="$upstream_connect_time" '
                    'uht="$upstream_header_time" urt="$upstream_response_time"';

    access_log /var/log/nginx/access.log main;

    # 基本设置
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    client_max_body_size 100M;

    # Gzip压缩
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/json
        application/javascript
        application/xml+rss
        application/atom+xml
        image/svg+xml;

    # 上游服务器定义
    upstream user_service {
        least_conn;
        server user-service:8080 max_fails=3 fail_timeout=30s;
        keepalive 32;
    }

    upstream meeting_service {
        least_conn;
        server meeting-service:8080 max_fails=3 fail_timeout=30s;
        keepalive 32;
    }

    upstream signaling_service {
        least_conn;
        server signaling-service:8080 max_fails=3 fail_timeout=30s;
        keepalive 32;
    }

    upstream media_service {
        least_conn;
        server media-service:8080 max_fails=3 fail_timeout=30s;
        keepalive 32;
    }

    upstream ai_service {
        least_conn;
        server ai-service:8080 max_fails=3 fail_timeout=30s;
        keepalive 32;
    }

    upstream notification_service {
        least_conn;
        server notification-service:8080 max_fails=3 fail_timeout=30s;
        keepalive 32;
    }

    # 限流配置
    limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;
    limit_req_zone $binary_remote_addr zone=auth:10m rate=5r/s;
    limit_req_zone $binary_remote_addr zone=upload:10m rate=2r/s;

    # 主服务器配置
    server {
        listen 80;
        server_name localhost;

        # 安全头
        add_header X-Frame-Options DENY;
        add_header X-Content-Type-Options nosniff;
        add_header X-XSS-Protection "1; mode=block";
        add_header Referrer-Policy "strict-origin-when-cross-origin";

        # 健康检查
        location /health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }

        # API路由
        location /api/v1/auth/ {
            limit_req zone=auth burst=10 nodelay;
            proxy_pass http://user_service;
            include /etc/nginx/conf.d/proxy_params.conf;
        }

        location /api/v1/users/ {
            limit_req zone=api burst=20 nodelay;
            proxy_pass http://user_service;
            include /etc/nginx/conf.d/proxy_params.conf;
        }

        location /api/v1/meetings/ {
            limit_req zone=api burst=20 nodelay;
            proxy_pass http://meeting_service;
            include /etc/nginx/conf.d/proxy_params.conf;
        }

        location /api/v1/signaling/ {
            proxy_pass http://signaling_service;
            include /etc/nginx/conf.d/proxy_params.conf;
        }

        # WebSocket支持 (信令服务)
        location /ws/signaling/ {
            proxy_pass http://signaling_service;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_read_timeout 86400;
        }

        location /api/v1/media/ {
            limit_req zone=api burst=30 nodelay;
            proxy_pass http://media_service;
            include /etc/nginx/conf.d/proxy_params.conf;
        }

        location /api/v1/ai/ {
            limit_req zone=api burst=15 nodelay;
            proxy_pass http://ai_service;
            include /etc/nginx/conf.d/proxy_params.conf;
        }

        location /api/v1/notifications/ {
            proxy_pass http://notification_service;
            include /etc/nginx/conf.d/proxy_params.conf;
        }

        # WebSocket支持 (通知服务)
        location /ws/notifications/ {
            proxy_pass http://notification_service;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_read_timeout 86400;
        }

        # 文件上传
        location /api/v1/upload/ {
            limit_req zone=upload burst=5 nodelay;
            client_max_body_size 100M;
            proxy_pass http://media_service;
            include /etc/nginx/conf.d/proxy_params.conf;
            
            # 上传进度支持
            proxy_request_buffering off;
        }

        # 静态文件服务
        location /static/ {
            alias /var/www/static/;
            expires 1y;
            add_header Cache-Control "public, immutable";
            access_log off;
        }

        # 前端应用
        location / {
            root /var/www/html;
            index index.html;
            try_files $uri $uri/ /index.html;
            
            # 缓存策略
            location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg)$ {
                expires 1y;
                add_header Cache-Control "public, immutable";
                access_log off;
            }
        }

        # 管理界面
        location /admin/ {
            root /var/www/admin;
            index index.html;
            try_files $uri $uri/ /admin/index.html;
            
            # 基本认证（生产环境应使用更安全的认证方式）
            auth_basic "Admin Area";
            auth_basic_user_file /etc/nginx/.htpasswd;
        }

        # 错误页面
        error_page 404 /404.html;
        error_page 500 502 503 504 /50x.html;
        
        location = /50x.html {
            root /var/www/html;
        }
    }

    # HTTPS配置 (生产环境)
    # server {
    #     listen 443 ssl http2;
    #     server_name your-domain.com;
    #     
    #     ssl_certificate /etc/ssl/certs/your-cert.pem;
    #     ssl_certificate_key /etc/ssl/private/your-key.pem;
    #     ssl_session_timeout 1d;
    #     ssl_session_cache shared:SSL:50m;
    #     ssl_session_tickets off;
    #     
    #     ssl_protocols TLSv1.2 TLSv1.3;
    #     ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384;
    #     ssl_prefer_server_ciphers off;
    #     
    #     add_header Strict-Transport-Security "max-age=63072000" always;
    #     
    #     # 其他配置与HTTP相同...
    # }

    # HTTP重定向到HTTPS (生产环境)
    # server {
    #     listen 80;
    #     server_name your-domain.com;
    #     return 301 https://$server_name$request_uri;
    # }
}
