# Azure AKS集成配置
# Azure Application Gateway Ingress Controller
apiVersion: v1
kind: ConfigMap
metadata:
  name: azure-config
  namespace: video-conference
data:
  # Azure配置
  subscription-id: "your-subscription-id"
  resource-group: "video-conference-rg"
  tenant-id: "your-tenant-id"
  client-id: "your-client-id"
---
# Azure Application Gateway Ingress
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: video-conference-appgw
  namespace: video-conference
  annotations:
    # Application Gateway配置
    kubernetes.io/ingress.class: azure/application-gateway
    appgw.ingress.kubernetes.io/backend-path-prefix: "/"
    appgw.ingress.kubernetes.io/ssl-redirect: "true"
    appgw.ingress.kubernetes.io/connection-draining: "true"
    appgw.ingress.kubernetes.io/connection-draining-timeout: "30"
    appgw.ingress.kubernetes.io/cookie-based-affinity: "true"
    
    # SSL配置
    appgw.ingress.kubernetes.io/appgw-ssl-certificate: "video-conference-ssl"
    
    # 健康检查
    appgw.ingress.kubernetes.io/health-probe-path: "/health"
    appgw.ingress.kubernetes.io/health-probe-status-codes: "200-399"
    appgw.ingress.kubernetes.io/health-probe-interval: "30"
    appgw.ingress.kubernetes.io/health-probe-timeout: "5"
    appgw.ingress.kubernetes.io/health-probe-unhealthy-threshold: "3"
    
    # 请求路由
    appgw.ingress.kubernetes.io/request-timeout: "600"
    appgw.ingress.kubernetes.io/backend-protocol: "http"
spec:
  tls:
  - hosts:
    - your-domain.com
    - api.your-domain.com
    secretName: video-conference-tls
  rules:
  - host: your-domain.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: web-client-service
            port:
              number: 80
  - host: api.your-domain.com
    http:
      paths:
      - path: /api
        pathType: Prefix
        backend:
          service:
            name: gateway-service
            port:
              number: 8080
      - path: /ws
        pathType: Prefix
        backend:
          service:
            name: signaling-service
            port:
              number: 8083
---
# Azure Load Balancer Service
apiVersion: v1
kind: Service
metadata:
  name: video-conference-azure-lb
  namespace: video-conference
  annotations:
    # Azure Load Balancer配置
    service.beta.kubernetes.io/azure-load-balancer-internal: "false"
    service.beta.kubernetes.io/azure-load-balancer-mode: "auto"
    service.beta.kubernetes.io/azure-load-balancer-health-probe-request-path: "/health"
    service.beta.kubernetes.io/azure-load-balancer-health-probe-num-of-probe: "2"
    service.beta.kubernetes.io/azure-load-balancer-health-probe-interval: "5"
    service.beta.kubernetes.io/azure-dns-label-name: "video-conference"
spec:
  type: LoadBalancer
  ports:
  - name: http
    port: 80
    targetPort: 80
    protocol: TCP
  - name: https
    port: 443
    targetPort: 443
    protocol: TCP
  selector:
    app: gateway-service
---
# Azure Front Door配置 (需要在Azure门户配置)
apiVersion: v1
kind: ConfigMap
metadata:
  name: azure-frontdoor-config
  namespace: video-conference
data:
  frontdoor-config.json: |
    {
      "name": "video-conference-fd",
      "resourceGroup": "video-conference-rg",
      "properties": {
        "friendlyName": "Video Conference Front Door",
        "enabledState": "Enabled",
        "frontendEndpoints": [
          {
            "name": "video-conference-frontend",
            "properties": {
              "hostName": "your-domain.com",
              "sessionAffinityEnabledState": "Enabled",
              "sessionAffinityTtlSeconds": 86400
            }
          }
        ],
        "backendPools": [
          {
            "name": "video-conference-backend",
            "properties": {
              "backends": [
                {
                  "address": "video-conference.region.cloudapp.azure.com",
                  "httpPort": 80,
                  "httpsPort": 443,
                  "weight": 100,
                  "priority": 1,
                  "enabledState": "Enabled"
                }
              ],
              "healthProbeSettings": {
                "path": "/health",
                "protocol": "Https",
                "intervalInSeconds": 30,
                "healthProbeMethod": "GET"
              },
              "loadBalancingSettings": {
                "sampleSize": 4,
                "successfulSamplesRequired": 2,
                "additionalLatencyMilliseconds": 0
              }
            }
          }
        ],
        "routingRules": [
          {
            "name": "default-routing",
            "properties": {
              "frontendEndpoints": [
                {
                  "id": "/subscriptions/{subscription-id}/resourceGroups/video-conference-rg/providers/Microsoft.Network/frontDoors/video-conference-fd/frontendEndpoints/video-conference-frontend"
                }
              ],
              "acceptedProtocols": ["Http", "Https"],
              "patternsToMatch": ["/*"],
              "routeConfiguration": {
                "@odata.type": "#Microsoft.Azure.FrontDoor.Models.FrontdoorForwardingConfiguration",
                "backendPool": {
                  "id": "/subscriptions/{subscription-id}/resourceGroups/video-conference-rg/providers/Microsoft.Network/frontDoors/video-conference-fd/backendPools/video-conference-backend"
                },
                "forwardingProtocol": "HttpsOnly",
                "cacheConfiguration": {
                  "queryParameterStripDirective": "StripNone",
                  "dynamicCompression": "Enabled"
                }
              }
            }
          }
        ]
      }
    }
